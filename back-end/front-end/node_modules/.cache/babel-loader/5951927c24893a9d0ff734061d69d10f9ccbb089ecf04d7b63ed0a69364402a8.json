{"ast":null,"code":"import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nimport baseUrlWithHeaders from \"../baseUrlWithHeaders\";\nexport const slideImageApi = createApi({\n  reducerPath: 'slideImageApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'http://localhost:5000'\n  }),\n  tagTypes: 'SlideImage',\n  endpoints: builder => ({\n    fetchAllImage: builder.query({\n      query: () => ({\n        url: '/slide-image',\n        method: 'GET'\n      }),\n      providesTags: ['SlideImage']\n    }),\n    addNewSlideImage: builder.mutation({\n      query: imageData => ({\n        url: '/slide-image',\n        method: 'POST',\n        body: imageData\n      }),\n      invalidatesTags: ['SlideImage']\n    }),\n    upArrow: builder.mutation({\n      query: imageData => ({\n        url: `/slide-image/up-arrow/${imageData._id}`,\n        method: 'PUT',\n        body: imageData\n      }),\n      invalidatesTags: ['SlideImage']\n    }),\n    downArrow: builder.mutation({\n      query: imageData => ({\n        url: `/slide-image/down-arrow/${imageData._id}`,\n        method: 'PUT',\n        body: imageData\n      }),\n      invalidatesTags: ['SlideImage']\n    }),\n    deleteImage: builder.mutation({\n      query: imageId => ({\n        url: `/slide-image/${imageId}`,\n        method: 'DELETE'\n      }),\n      invalidatesTags: ['SlideImage']\n    })\n  })\n});\nexport const {\n  useAddNewSlideImageMutation,\n  useUpArrowMutation,\n  useDownArrowMutation,\n  useFetchAllImageQuery\n} = slideImageApi;","map":{"version":3,"names":["createApi","fetchBaseQuery","baseUrlWithHeaders","slideImageApi","reducerPath","baseQuery","baseUrl","tagTypes","endpoints","builder","fetchAllImage","query","url","method","providesTags","addNewSlideImage","mutation","imageData","body","invalidatesTags","upArrow","_id","downArrow","deleteImage","imageId","useAddNewSlideImageMutation","useUpArrowMutation","useDownArrowMutation","useFetchAllImageQuery"],"sources":["D:/e-commerce/back-end/front-end/src/features/slideImageApi.js"],"sourcesContent":["import {createApi, fetchBaseQuery} from \"@reduxjs/toolkit/query/react\"\r\nimport baseUrlWithHeaders from \"../baseUrlWithHeaders\"\r\nexport const slideImageApi = createApi({\r\n    reducerPath:'slideImageApi',\r\n    baseQuery:fetchBaseQuery({baseUrl:'http://localhost:5000',}),\r\n    tagTypes:'SlideImage',\r\n    endpoints:(builder)=>({\r\n\r\n        fetchAllImage:builder.query({\r\n            query:()=>({\r\n                url:'/slide-image',\r\n                method:'GET'\r\n            }),\r\n            providesTags:['SlideImage']\r\n        }),\r\n\r\n        addNewSlideImage : builder.mutation({\r\n            query:(imageData) => ({\r\n                url:'/slide-image',\r\n                method:'POST',\r\n                body:imageData\r\n            }),\r\n            invalidatesTags:['SlideImage']\r\n        }),\r\n\r\n        upArrow : builder.mutation({\r\n            query:(imageData) => ({\r\n                url:`/slide-image/up-arrow/${imageData._id}`,\r\n                method:'PUT',\r\n                body:imageData\r\n            }),\r\n            invalidatesTags:['SlideImage']\r\n        }),\r\n\r\n        downArrow : builder.mutation({\r\n            query:(imageData) => ({\r\n                url:`/slide-image/down-arrow/${imageData._id}`,\r\n                method:'PUT',\r\n                body:imageData\r\n            }),\r\n            invalidatesTags:['SlideImage']\r\n        }),\r\n\r\n        deleteImage:builder.mutation({\r\n            query:(imageId)=>({\r\n                url:`/slide-image/${imageId}`,\r\n                method:'DELETE'\r\n\r\n            }),\r\n            invalidatesTags:['SlideImage']\r\n        })\r\n\r\n    })\r\n\r\n})\r\n\r\nexport const {useAddNewSlideImageMutation,useUpArrowMutation, useDownArrowMutation, useFetchAllImageQuery} = slideImageApi"],"mappings":"AAAA,SAAQA,SAAS,EAAEC,cAAc,QAAO,8BAA8B;AACtE,OAAOC,kBAAkB,MAAM,uBAAuB;AACtD,OAAO,MAAMC,aAAa,GAAGH,SAAS,CAAC;EACnCI,WAAW,EAAC,eAAe;EAC3BC,SAAS,EAACJ,cAAc,CAAC;IAACK,OAAO,EAAC;EAAwB,CAAC,CAAC;EAC5DC,QAAQ,EAAC,YAAY;EACrBC,SAAS,EAAEC,OAAO,KAAI;IAElBC,aAAa,EAACD,OAAO,CAACE,KAAK,CAAC;MACxBA,KAAK,EAAC,OAAK;QACPC,GAAG,EAAC,cAAc;QAClBC,MAAM,EAAC;MACX,CAAC,CAAC;MACFC,YAAY,EAAC,CAAC,YAAY;IAC9B,CAAC,CAAC;IAEFC,gBAAgB,EAAGN,OAAO,CAACO,QAAQ,CAAC;MAChCL,KAAK,EAAEM,SAAS,KAAM;QAClBL,GAAG,EAAC,cAAc;QAClBC,MAAM,EAAC,MAAM;QACbK,IAAI,EAACD;MACT,CAAC,CAAC;MACFE,eAAe,EAAC,CAAC,YAAY;IACjC,CAAC,CAAC;IAEFC,OAAO,EAAGX,OAAO,CAACO,QAAQ,CAAC;MACvBL,KAAK,EAAEM,SAAS,KAAM;QAClBL,GAAG,EAAE,yBAAwBK,SAAS,CAACI,GAAI,EAAC;QAC5CR,MAAM,EAAC,KAAK;QACZK,IAAI,EAACD;MACT,CAAC,CAAC;MACFE,eAAe,EAAC,CAAC,YAAY;IACjC,CAAC,CAAC;IAEFG,SAAS,EAAGb,OAAO,CAACO,QAAQ,CAAC;MACzBL,KAAK,EAAEM,SAAS,KAAM;QAClBL,GAAG,EAAE,2BAA0BK,SAAS,CAACI,GAAI,EAAC;QAC9CR,MAAM,EAAC,KAAK;QACZK,IAAI,EAACD;MACT,CAAC,CAAC;MACFE,eAAe,EAAC,CAAC,YAAY;IACjC,CAAC,CAAC;IAEFI,WAAW,EAACd,OAAO,CAACO,QAAQ,CAAC;MACzBL,KAAK,EAAEa,OAAO,KAAI;QACdZ,GAAG,EAAE,gBAAeY,OAAQ,EAAC;QAC7BX,MAAM,EAAC;MAEX,CAAC,CAAC;MACFM,eAAe,EAAC,CAAC,YAAY;IACjC,CAAC;EAEL,CAAC;AAEL,CAAC,CAAC;AAEF,OAAO,MAAM;EAACM,2BAA2B;EAACC,kBAAkB;EAAEC,oBAAoB;EAAEC;AAAqB,CAAC,GAAGzB,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}